 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Confirm;
import controller.ConnectDatabase;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Map;
import java.util.TreeMap;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Employee;

/**
 *
 * @author lnminh
 */
public class frmEmployee extends javax.swing.JFrame {

    private Vector<String> TableTitle;
    private Vector<Vector> TableData;
    private Vector<Employee> listEmps;
    private TreeMap<String, String> listPosition;

    /**
     * Creates new form frmEmployee
     */
    public frmEmployee() {
        initComponents();
        addWindowListener(Confirm.disposeListener(this));
        loadData();

    }

    public void loadData() {
        loadPosition();
        loadTableEmp();
    }

    private void loadPosition() {
        listPosition = new TreeMap<>();
        cbPosition.removeAllItems();
        try (Connection conn = ConnectDatabase.getConnectDatabase()) {
            String sql = "{call sp_getPosition}";
            try (CallableStatement cstmt = conn.prepareCall(sql); ResultSet rs = cstmt.executeQuery()) {
                while (rs.next()) {
                    String value = rs.getString("tenChucVu");
                    String id = rs.getString("maChucVu");
                    cbPosition.addItem(value);
                    listPosition.put(id, value);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "lỗi tải dữ liệu");
        }
    }

    private void loadTableEmp() {
        loadTableTitle();
        loadTableData();
        showOnTable();
    }

    private void loadTableTitle() {
        TableTitle = new Vector<>();
        TableTitle.add("Mã số");
        TableTitle.add("Tên");
        TableTitle.add("Chức vụ");
        TableTitle.add("Số điện thoại");
        TableTitle.add("Địa chỉ");
        TableTitle.add("Trạng thái hoạt động");

    }

    private void loadTableData() {
        listEmps = new Vector<>();

        TableData = new Vector<>();
        try (Connection conn = ConnectDatabase.getConnectDatabase()) {
            String sql = "{call sp_getEmp}";
            try (CallableStatement cstmt = conn.prepareCall(sql); ResultSet rs = cstmt.executeQuery()) {
                while (rs.next()) {
                    listEmps.add(new Employee(rs.getString("maNV"), rs.getString("tenNV"),
                            rs.getString("maChucVu"), rs.getString("sdtNV"), rs.getString("diaChiNV"), rs.getBoolean("trangthai")));
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "lỗi tải dữ liệu");
        }
        for (Employee emp : listEmps) {
            if (!cboStatus.isSelected()) {
                if (!emp.isStatus()) {
                    continue;
                }
            }
            Vector<String> temp = new Vector<>();
            temp.add(emp.getID());
            temp.add(emp.getName());
            temp.add(listPosition.get(emp.getPosittion()));
            temp.add(emp.getPhoneNumber());
            temp.add(emp.getAddress());
            if (emp.isStatus()) {
                temp.add("Đang làm việc");
            } else {
                temp.add("Đã nghỉ việc");
            }
            TableData.add(temp);
        }

    }

    private void showOnTable() {
        DefaultTableModel dtm = new DefaultTableModel(TableData, TableTitle) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }

        };
        tblEmp.setModel(dtm);
    }

    private void showToEditText() {
        int selectedRow = tblEmp.getSelectedRow();
        txtID.setText((String) tblEmp.getValueAt(selectedRow, 0));
        txtName.setText((String) tblEmp.getValueAt(selectedRow, 1));
        txtPhoneNum.setText((String) tblEmp.getValueAt(selectedRow, 3));
        txtAddress.setText((String) tblEmp.getValueAt(selectedRow, 4));
        cbPosition.setSelectedItem((String) tblEmp.getValueAt(selectedRow, 2));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnEmp = new javax.swing.JPanel();
        scEmp = new javax.swing.JScrollPane();
        tblEmp = new javax.swing.JTable();
        lbID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtPhoneNum = new javax.swing.JTextField();
        lblPhoneNum = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        btnDel = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        lblIcon = new javax.swing.JLabel();
        cbPosition = new javax.swing.JComboBox<>();
        lblPosition = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        cboStatus = new javax.swing.JCheckBox();
        btnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        pnEmp.setBackground(new java.awt.Color(30, 165, 165));

        tblEmp.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tblEmp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        tblEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmpMouseClicked(evt);
            }
        });
        scEmp.setViewportView(tblEmp);

        lbID.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbID.setForeground(new java.awt.Color(51, 51, 51));
        lbID.setText("Mã nhân viên");
        lbID.setToolTipText("");

        txtID.setColumns(20);

        txtName.setColumns(20);

        lblName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblName.setForeground(new java.awt.Color(51, 51, 51));
        lblName.setText("Tên nhân viên");
        lblName.setToolTipText("");

        txtPhoneNum.setColumns(20);

        lblPhoneNum.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblPhoneNum.setForeground(new java.awt.Color(51, 51, 51));
        lblPhoneNum.setText("Số điện thoại");
        lblPhoneNum.setToolTipText("");

        lblAddress.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(51, 51, 51));
        lblAddress.setText("Địa chỉ");
        lblAddress.setToolTipText("");

        txtAddress.setColumns(20);

        btnDel.setBackground(new java.awt.Color(255, 255, 255));
        btnDel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnDel.setForeground(new java.awt.Color(0, 0, 0));
        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/del_button.png"))); // NOI18N
        btnDel.setText("Xóa");
        btnDel.setContentAreaFilled(false);
        btnDel.setOpaque(true);
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(0, 0, 0));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add_button.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.setContentAreaFilled(false);
        btnAdd.setOpaque(true);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/employee.png"))); // NOI18N

        cbPosition.setBackground(new java.awt.Color(255, 255, 255));
        cbPosition.setEditable(true);
        cbPosition.setForeground(new java.awt.Color(0, 0, 0));
        cbPosition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblPosition.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblPosition.setForeground(new java.awt.Color(51, 51, 51));
        lblPosition.setText("Chức vụ");
        lblPosition.setToolTipText("");

        btnEdit.setBackground(new java.awt.Color(255, 255, 255));
        btnEdit.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(0, 0, 0));
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit_button.png"))); // NOI18N
        btnEdit.setText("Sửa");
        btnEdit.setContentAreaFilled(false);
        btnEdit.setOpaque(true);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        cboStatus.setBackground(new java.awt.Color(30, 165, 165));
        cboStatus.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cboStatus.setText("Đã Nghỉ Việc");
        cboStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboStatusMouseClicked(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdate.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(0, 0, 0));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/change.png"))); // NOI18N
        btnUpdate.setText("Đổi Trạng Thái");
        btnUpdate.setContentAreaFilled(false);
        btnUpdate.setOpaque(true);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnEmpLayout = new javax.swing.GroupLayout(pnEmp);
        pnEmp.setLayout(pnEmpLayout);
        pnEmpLayout.setHorizontalGroup(
            pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnEmpLayout.createSequentialGroup()
                .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnEmpLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(cboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnEmpLayout.createSequentialGroup()
                        .addComponent(lbID, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtID))
                    .addGroup(pnEmpLayout.createSequentialGroup()
                        .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtName)
                            .addComponent(cbPosition, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEdit))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 40, Short.MAX_VALUE)
                .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnEmpLayout.createSequentialGroup()
                            .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtAddress))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnEmpLayout.createSequentialGroup()
                            .addComponent(lblPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnEmpLayout.createSequentialGroup()
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(scEmp)
        );
        pnEmpLayout.setVerticalGroup(
            pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnEmpLayout.createSequentialGroup()
                .addComponent(scEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnEmpLayout.createSequentialGroup()
                        .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnEmpLayout.createSequentialGroup()
                                .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnEmpLayout.createSequentialGroup()
                        .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(pnEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblEmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmpMouseClicked
        showToEditText();// TODO add your handling code here:
    }//GEN-LAST:event_tblEmpMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        addNewEmp();
        loadTableEmp();
    }//GEN-LAST:event_btnAddActionPerformed

    private void addNewEmp() {
        if (txtID.getText().trim().equalsIgnoreCase("")
                || txtName.getText().trim().equalsIgnoreCase("")
                || txtAddress.getText().trim().equalsIgnoreCase("")
                || txtPhoneNum.getText().trim().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Xin điền vào đầy đủ thông tin");
            return;
        }
        try (Connection conn = ConnectDatabase.getConnectDatabase()) {
            String sql = "{call sp_addNewEmp(?,?,?,?,?)}";
            try (CallableStatement cstmt = conn.prepareCall(sql)) {
                cstmt.setString(1, txtID.getText());
                cstmt.setString(2, txtName.getText());
                for (Map.Entry<String, String> entry : listPosition.entrySet()) {
                    if (entry.getValue().equalsIgnoreCase((String) cbPosition.getSelectedItem())) {
                        cstmt.setString(3, entry.getKey());
                    }
                }
                cstmt.setString(4, txtPhoneNum.getText());
                cstmt.setString(5, txtAddress.getText());
                cstmt.executeUpdate();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "lỗi thêm dữ liệu");
        }
    }


    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        delEmp();
        loadTableEmp();
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        requestEditPosition();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updateEmpStatus();
        loadTableEmp();
    }//GEN-LAST:event_btnUpdateActionPerformed
    private void updateEmpStatus() {
               if (txtID.getText().trim().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Xin điền vào mã nhân viên");
            return;
        }
        try (Connection conn = ConnectDatabase.getConnectDatabase()) {
            String sql = "{call sp_updateEmpStatus(?,?)}";
            try (CallableStatement cstmt = conn.prepareCall(sql)) {
                cstmt.setString(1, txtID.getText());
                for (Employee emp : listEmps) {
                    if(emp.getID().equalsIgnoreCase(txtID.getText())){
                        cstmt.setBoolean(2, !emp.isStatus());
                        break;
                    }
                }
                
                cstmt.executeUpdate();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "lỗi cập nhật dữ liệu");
        }

        
    
    }

    
    private void cboStatusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboStatusMouseClicked
        loadTableEmp();
    }//GEN-LAST:event_cboStatusMouseClicked

    private void requestEditPosition() {
        frmPosition fp = new frmPosition();
        fp.setLocationRelativeTo(this);
        fp.setVisible(true);

    }

    private void delEmp() {
        if (txtID.getText().trim().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Hãy điền vào mã khách hàng");
            return;
        }
        try (Connection conn = ConnectDatabase.getConnectDatabase()) {
            String sql = "{call sp_delEmp(?)}";
            try (CallableStatement cstmt = conn.prepareCall(sql)) {
                cstmt.setString(1, txtID.getText());
                cstmt.executeUpdate();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "lỗi xóa dữ liệu");
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbPosition;
    private javax.swing.JCheckBox cboStatus;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhoneNum;
    private javax.swing.JLabel lblPosition;
    private javax.swing.JPanel pnEmp;
    private javax.swing.JScrollPane scEmp;
    private javax.swing.JTable tblEmp;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhoneNum;
    // End of variables declaration//GEN-END:variables

}
